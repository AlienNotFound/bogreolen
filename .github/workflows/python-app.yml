name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    types: [opened, reopened]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: bogreolen_database
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        sudo apt-get update && sudo apt-get install -y mysql-client
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f ./backend/requirements.txt ]; then pip install -r ./backend/requirements.txt; fi

    - name: Wait for MySQL
      env:
        MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
      run: |
        echo "Waiting for MySQL to start..."
        for i in {1..20}; do
          if mysqladmin ping -h mysql -uroot -p$secrets.MYSQL_ROOT_PASSWORD --silent; then
            echo "MySQL is ready!"
            break
          fi
          echo "MySQL not ready yet... retrying ($i/20)"
          sleep 5
        done

    - name: Initialize MySQL Database
      env:
        MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        MYSQL_HOST: mysql
      run: |
        mysql -h $MYSQL_HOST -uroot -p$MYSQL_ROOT_PASSWORD $MYSQL_DATABASE < backend/sql/bogreolen_database_bookstb.sql
        mysql -h $MYSQL_HOST -uroot -p$MYSQL_ROOT_PASSWORD $MYSQL_DATABASE < backend/sql/bogreolen_database_routines.sql

    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Prepare test database
      env:
        MYSQL_DATABASE: bogreolen_database
        MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        MYSQL_HOST: mysql
      run: |
        mysql -h MYSQL_HOST -uroot -p$MYSQL_ROOT_PASSWORD -e "DROP DATABASE IF EXISTS ${{ env.MYSQL_DATABASE }};"
        mysql -h MYSQL_HOST -uroot -p$MYSQL_ROOT_PASSWORD -e "CREATE DATABASE ${{ env.MYSQL_DATABASE }};"

    - name: Run tests
      env:
        MYSQL_DATABASE: bogreolen_database
        MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        MYSQL_HOST: mysql
      run: |
        pytest ./backend/tests/basetests.py -v
